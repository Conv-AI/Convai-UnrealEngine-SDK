// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service.proto
#pragma warning (disable : 4125)
#pragma warning (disable : 4800)

#include "service.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ActionConfig_service_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionConfig_Character_service_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionConfig_Object_service_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AudioConfig_service_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetResponseRequest_GetResponseConfig_service_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResponseRequest_GetResponseData_service_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResponseResponse_ActionResponse_service_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResponseResponse_AudioResponse_service_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_service_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResponseResponse_UserTranscript_service_2eproto;
namespace service {
class AudioConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AudioConfig> _instance;
} _AudioConfig_default_instance_;
class ActionConfig_CharacterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionConfig_Character> _instance;
} _ActionConfig_Character_default_instance_;
class ActionConfig_ObjectDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionConfig_Object> _instance;
} _ActionConfig_Object_default_instance_;
class ActionConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ActionConfig> _instance;
} _ActionConfig_default_instance_;
class STTRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<STTRequest> _instance;
} _STTRequest_default_instance_;
class STTResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<STTResponse> _instance;
} _STTResponse_default_instance_;
class GetResponseRequest_GetResponseConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResponseRequest_GetResponseConfig> _instance;
} _GetResponseRequest_GetResponseConfig_default_instance_;
class GetResponseRequest_GetResponseDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResponseRequest_GetResponseData> _instance;
} _GetResponseRequest_GetResponseData_default_instance_;
class GetResponseRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResponseRequest> _instance;
} _GetResponseRequest_default_instance_;
class GetResponseResponse_AudioResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResponseResponse_AudioResponse> _instance;
} _GetResponseResponse_AudioResponse_default_instance_;
class GetResponseResponse_ActionResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResponseResponse_ActionResponse> _instance;
} _GetResponseResponse_ActionResponse_default_instance_;
class GetResponseResponse_UserTranscriptDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResponseResponse_UserTranscript> _instance;
} _GetResponseResponse_UserTranscript_default_instance_;
class GetResponseResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<GetResponseResponse> _instance;
} _GetResponseResponse_default_instance_;
class HelloRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HelloRequest> _instance;
} _HelloRequest_default_instance_;
class HelloResponseDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<HelloResponse> _instance;
} _HelloResponse_default_instance_;
}  // namespace service
static void InitDefaultsscc_info_ActionConfig_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_ActionConfig_default_instance_;
    new (ptr) ::service::ActionConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ActionConfig_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ActionConfig_service_2eproto}, {
      &scc_info_ActionConfig_Character_service_2eproto.base,
      &scc_info_ActionConfig_Object_service_2eproto.base,}};

static void InitDefaultsscc_info_ActionConfig_Character_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_ActionConfig_Character_default_instance_;
    new (ptr) ::service::ActionConfig_Character();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionConfig_Character_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActionConfig_Character_service_2eproto}, {}};

static void InitDefaultsscc_info_ActionConfig_Object_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_ActionConfig_Object_default_instance_;
    new (ptr) ::service::ActionConfig_Object();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ActionConfig_Object_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ActionConfig_Object_service_2eproto}, {}};

static void InitDefaultsscc_info_AudioConfig_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_AudioConfig_default_instance_;
    new (ptr) ::service::AudioConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AudioConfig_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AudioConfig_service_2eproto}, {}};

static void InitDefaultsscc_info_GetResponseRequest_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_GetResponseRequest_default_instance_;
    new (ptr) ::service::GetResponseRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetResponseRequest_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetResponseRequest_service_2eproto}, {
      &scc_info_GetResponseRequest_GetResponseConfig_service_2eproto.base,
      &scc_info_GetResponseRequest_GetResponseData_service_2eproto.base,}};

static void InitDefaultsscc_info_GetResponseRequest_GetResponseConfig_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_GetResponseRequest_GetResponseConfig_default_instance_;
    new (ptr) ::service::GetResponseRequest_GetResponseConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_GetResponseRequest_GetResponseConfig_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_GetResponseRequest_GetResponseConfig_service_2eproto}, {
      &scc_info_AudioConfig_service_2eproto.base,
      &scc_info_ActionConfig_service_2eproto.base,}};

static void InitDefaultsscc_info_GetResponseRequest_GetResponseData_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_GetResponseRequest_GetResponseData_default_instance_;
    new (ptr) ::service::GetResponseRequest_GetResponseData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResponseRequest_GetResponseData_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetResponseRequest_GetResponseData_service_2eproto}, {}};

static void InitDefaultsscc_info_GetResponseResponse_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_GetResponseResponse_default_instance_;
    new (ptr) ::service::GetResponseResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_GetResponseResponse_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_GetResponseResponse_service_2eproto}, {
      &scc_info_GetResponseResponse_ActionResponse_service_2eproto.base,
      &scc_info_GetResponseResponse_AudioResponse_service_2eproto.base,
      &scc_info_GetResponseResponse_UserTranscript_service_2eproto.base,}};

static void InitDefaultsscc_info_GetResponseResponse_ActionResponse_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_GetResponseResponse_ActionResponse_default_instance_;
    new (ptr) ::service::GetResponseResponse_ActionResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResponseResponse_ActionResponse_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetResponseResponse_ActionResponse_service_2eproto}, {}};

static void InitDefaultsscc_info_GetResponseResponse_AudioResponse_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_GetResponseResponse_AudioResponse_default_instance_;
    new (ptr) ::service::GetResponseResponse_AudioResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_GetResponseResponse_AudioResponse_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_GetResponseResponse_AudioResponse_service_2eproto}, {
      &scc_info_AudioConfig_service_2eproto.base,}};

static void InitDefaultsscc_info_GetResponseResponse_UserTranscript_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_GetResponseResponse_UserTranscript_default_instance_;
    new (ptr) ::service::GetResponseResponse_UserTranscript();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_GetResponseResponse_UserTranscript_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_GetResponseResponse_UserTranscript_service_2eproto}, {}};

static void InitDefaultsscc_info_HelloRequest_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_HelloRequest_default_instance_;
    new (ptr) ::service::HelloRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HelloRequest_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HelloRequest_service_2eproto}, {}};

static void InitDefaultsscc_info_HelloResponse_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_HelloResponse_default_instance_;
    new (ptr) ::service::HelloResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_HelloResponse_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_HelloResponse_service_2eproto}, {}};

static void InitDefaultsscc_info_STTRequest_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_STTRequest_default_instance_;
    new (ptr) ::service::STTRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_STTRequest_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_STTRequest_service_2eproto}, {
      &scc_info_AudioConfig_service_2eproto.base,}};

static void InitDefaultsscc_info_STTResponse_service_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::service::_STTResponse_default_instance_;
    new (ptr) ::service::STTResponse();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_STTResponse_service_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_STTResponse_service_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_service_2eproto[15];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_service_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_service_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_service_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::AudioConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::AudioConfig, sample_rate_hertz_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, name_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Character, bio_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, name_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig_Object, description_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, actions_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, characters_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, objects_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, classification_),
  PROTOBUF_FIELD_OFFSET(::service::ActionConfig, context_level_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::STTRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::STTRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::STTRequest, request_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::STTResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::STTResponse, text_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, character_id_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, api_key_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, session_id_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, audio_config_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, action_config_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseConfig, speaker_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest_GetResponseData, input_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::GetResponseRequest, request_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, audio_data_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, audio_config_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, text_data_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_AudioResponse, end_of_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_ActionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_ActionResponse, action_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, text_data_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, is_final_),
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse_UserTranscript, end_of_response_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, session_id_),
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  ::PROTOBUF_NAMESPACE_ID::internal::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::service::GetResponseResponse, response_type_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::HelloRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::HelloRequest, name_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::service::HelloResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::service::HelloResponse, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::service::AudioConfig)},
  { 6, -1, sizeof(::service::ActionConfig_Character)},
  { 13, -1, sizeof(::service::ActionConfig_Object)},
  { 20, -1, sizeof(::service::ActionConfig)},
  { 30, -1, sizeof(::service::STTRequest)},
  { 38, -1, sizeof(::service::STTResponse)},
  { 44, -1, sizeof(::service::GetResponseRequest_GetResponseConfig)},
  { 55, -1, sizeof(::service::GetResponseRequest_GetResponseData)},
  { 63, -1, sizeof(::service::GetResponseRequest)},
  { 71, -1, sizeof(::service::GetResponseResponse_AudioResponse)},
  { 80, -1, sizeof(::service::GetResponseResponse_ActionResponse)},
  { 86, -1, sizeof(::service::GetResponseResponse_UserTranscript)},
  { 94, -1, sizeof(::service::GetResponseResponse)},
  { 105, -1, sizeof(::service::HelloRequest)},
  { 111, -1, sizeof(::service::HelloResponse)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_AudioConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_ActionConfig_Character_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_ActionConfig_Object_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_ActionConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_STTRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_STTResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_GetResponseRequest_GetResponseConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_GetResponseRequest_GetResponseData_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_GetResponseRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_GetResponseResponse_AudioResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_GetResponseResponse_ActionResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_GetResponseResponse_UserTranscript_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_GetResponseResponse_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_HelloRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::service::_HelloResponse_default_instance_),
};

const char descriptor_table_protodef_service_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rservice.proto\022\007service\"(\n\013AudioConfig\022"
  "\031\n\021sample_rate_hertz\030\001 \001(\005\"\207\002\n\014ActionCon"
  "fig\022\017\n\007actions\030\001 \003(\t\0223\n\ncharacters\030\002 \003(\013"
  "2\037.service.ActionConfig.Character\022-\n\007obj"
  "ects\030\003 \003(\0132\034.service.ActionConfig.Object"
  "\022\026\n\016classification\030\004 \001(\t\022\025\n\rcontext_leve"
  "l\030\005 \001(\005\032&\n\tCharacter\022\014\n\004name\030\001 \001(\t\022\013\n\003bi"
  "o\030\002 \001(\t\032+\n\006Object\022\014\n\004name\030\001 \001(\t\022\023\n\013descr"
  "iption\030\002 \001(\t\"a\n\nSTTRequest\022,\n\014audio_conf"
  "ig\030\001 \001(\0132\024.service.AudioConfigH\000\022\025\n\013audi"
  "o_chunk\030\002 \001(\014H\000B\016\n\014request_type\"\033\n\013STTRe"
  "sponse\022\014\n\004text\030\001 \001(\t\"\304\003\n\022GetResponseRequ"
  "est\022L\n\023get_response_config\030\001 \001(\0132-.servi"
  "ce.GetResponseRequest.GetResponseConfigH"
  "\000\022H\n\021get_response_data\030\002 \001(\0132+.service.G"
  "etResponseRequest.GetResponseDataH\000\032\271\001\n\021"
  "GetResponseConfig\022\024\n\014character_id\030\002 \001(\t\022"
  "\017\n\007api_key\030\003 \001(\t\022\022\n\nsession_id\030\004 \001(\t\022*\n\014"
  "audio_config\030\005 \001(\0132\024.service.AudioConfig"
  "\022,\n\raction_config\030\006 \001(\0132\025.service.Action"
  "Config\022\017\n\007speaker\030\007 \001(\t\032J\n\017GetResponseDa"
  "ta\022\024\n\naudio_data\030\001 \001(\014H\000\022\023\n\ttext_data\030\002 "
  "\001(\tH\000B\014\n\ninput_typeB\016\n\014request_type\"\217\004\n\023"
  "GetResponseResponse\022\022\n\nsession_id\030\001 \001(\t\022"
  "F\n\017action_response\030\002 \001(\0132+.service.GetRe"
  "sponseResponse.ActionResponseH\000\022D\n\016audio"
  "_response\030\003 \001(\0132*.service.GetResponseRes"
  "ponse.AudioResponseH\000\022\023\n\tdebug_log\030\004 \001(\t"
  "H\000\022A\n\nuser_query\030\005 \001(\0132+.service.GetResp"
  "onseResponse.UserTranscriptH\000\032{\n\rAudioRe"
  "sponse\022\022\n\naudio_data\030\001 \001(\014\022*\n\014audio_conf"
  "ig\030\002 \001(\0132\024.service.AudioConfig\022\021\n\ttext_d"
  "ata\030\003 \001(\t\022\027\n\017end_of_response\030\004 \001(\010\032 \n\016Ac"
  "tionResponse\022\016\n\006action\030\001 \001(\t\032N\n\016UserTran"
  "script\022\021\n\ttext_data\030\001 \001(\t\022\020\n\010is_final\030\002 "
  "\001(\010\022\027\n\017end_of_response\030\003 \001(\010B\017\n\rresponse"
  "_type\"\034\n\014HelloRequest\022\014\n\004name\030\001 \001(\t\" \n\rH"
  "elloResponse\022\017\n\007message\030\001 \001(\t2\236\002\n\rConvai"
  "Service\0228\n\005Hello\022\025.service.HelloRequest\032"
  "\026.service.HelloResponse\"\000\022B\n\013HelloStream"
  "\022\025.service.HelloRequest\032\026.service.HelloR"
  "esponse\"\000(\0010\001\022\?\n\014SpeechToText\022\023.service."
  "STTRequest\032\024.service.STTResponse\"\000(\0010\001\022N"
  "\n\013GetResponse\022\033.service.GetResponseReque"
  "st\032\034.service.GetResponseResponse\"\000(\0010\001b\006"
  "proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_service_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_service_2eproto_sccs[15] = {
  &scc_info_ActionConfig_service_2eproto.base,
  &scc_info_ActionConfig_Character_service_2eproto.base,
  &scc_info_ActionConfig_Object_service_2eproto.base,
  &scc_info_AudioConfig_service_2eproto.base,
  &scc_info_GetResponseRequest_service_2eproto.base,
  &scc_info_GetResponseRequest_GetResponseConfig_service_2eproto.base,
  &scc_info_GetResponseRequest_GetResponseData_service_2eproto.base,
  &scc_info_GetResponseResponse_service_2eproto.base,
  &scc_info_GetResponseResponse_ActionResponse_service_2eproto.base,
  &scc_info_GetResponseResponse_AudioResponse_service_2eproto.base,
  &scc_info_GetResponseResponse_UserTranscript_service_2eproto.base,
  &scc_info_HelloRequest_service_2eproto.base,
  &scc_info_HelloResponse_service_2eproto.base,
  &scc_info_STTRequest_service_2eproto.base,
  &scc_info_STTResponse_service_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_service_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_2eproto = {
  false, false, descriptor_table_protodef_service_2eproto, "service.proto", 1806,
  &descriptor_table_service_2eproto_once, descriptor_table_service_2eproto_sccs, descriptor_table_service_2eproto_deps, 15, 0,
  schemas, file_default_instances, TableStruct_service_2eproto::offsets,
  file_level_metadata_service_2eproto, 15, file_level_enum_descriptors_service_2eproto, file_level_service_descriptors_service_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_service_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_service_2eproto)), true);
namespace service {

// ===================================================================

class AudioConfig::_Internal {
 public:
};

AudioConfig::AudioConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.AudioConfig)
}
AudioConfig::AudioConfig(const AudioConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  sample_rate_hertz_ = from.sample_rate_hertz_;
  // @@protoc_insertion_point(copy_constructor:service.AudioConfig)
}

void AudioConfig::SharedCtor() {
  sample_rate_hertz_ = 0;
}

AudioConfig::~AudioConfig() {
  // @@protoc_insertion_point(destructor:service.AudioConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AudioConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void AudioConfig::ArenaDtor(void* object) {
  AudioConfig* _this = reinterpret_cast< AudioConfig* >(object);
  (void)_this;
}
void AudioConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AudioConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AudioConfig& AudioConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AudioConfig_service_2eproto.base);
  return *internal_default_instance();
}


void AudioConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.AudioConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  sample_rate_hertz_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AudioConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 sample_rate_hertz = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          sample_rate_hertz_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AudioConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.AudioConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 sample_rate_hertz = 1;
  if (this->sample_rate_hertz() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_sample_rate_hertz(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.AudioConfig)
  return target;
}

size_t AudioConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.AudioConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 sample_rate_hertz = 1;
  if (this->sample_rate_hertz() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_sample_rate_hertz());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AudioConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.AudioConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AudioConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AudioConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.AudioConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.AudioConfig)
    MergeFrom(*source);
  }
}

void AudioConfig::MergeFrom(const AudioConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.AudioConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.sample_rate_hertz() != 0) {
    _internal_set_sample_rate_hertz(from._internal_sample_rate_hertz());
  }
}

void AudioConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.AudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AudioConfig::CopyFrom(const AudioConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.AudioConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AudioConfig::IsInitialized() const {
  return true;
}

void AudioConfig::InternalSwap(AudioConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(sample_rate_hertz_, other->sample_rate_hertz_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AudioConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ActionConfig_Character::_Internal {
 public:
};

ActionConfig_Character::ActionConfig_Character(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig.Character)
}
ActionConfig_Character::ActionConfig_Character(const ActionConfig_Character& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  bio_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_bio().empty()) {
    bio_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_bio(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:service.ActionConfig.Character)
}

void ActionConfig_Character::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActionConfig_Character_service_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bio_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ActionConfig_Character::~ActionConfig_Character() {
  // @@protoc_insertion_point(destructor:service.ActionConfig.Character)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionConfig_Character::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  bio_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActionConfig_Character::ArenaDtor(void* object) {
  ActionConfig_Character* _this = reinterpret_cast< ActionConfig_Character* >(object);
  (void)_this;
}
void ActionConfig_Character::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionConfig_Character::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionConfig_Character& ActionConfig_Character::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionConfig_Character_service_2eproto.base);
  return *internal_default_instance();
}


void ActionConfig_Character::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig.Character)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  bio_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionConfig_Character::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.ActionConfig.Character.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string bio = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_bio();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.ActionConfig.Character.bio"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionConfig_Character::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig.Character)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.Character.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string bio = 2;
  if (this->bio().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_bio().data(), static_cast<int>(this->_internal_bio().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.Character.bio");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_bio(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig.Character)
  return target;
}

size_t ActionConfig_Character::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig.Character)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string bio = 2;
  if (this->bio().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_bio());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionConfig_Character::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.ActionConfig.Character)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionConfig_Character* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionConfig_Character>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.ActionConfig.Character)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.ActionConfig.Character)
    MergeFrom(*source);
  }
}

void ActionConfig_Character::MergeFrom(const ActionConfig_Character& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig.Character)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.bio().size() > 0) {
    _internal_set_bio(from._internal_bio());
  }
}

void ActionConfig_Character::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.ActionConfig.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionConfig_Character::CopyFrom(const ActionConfig_Character& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig.Character)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionConfig_Character::IsInitialized() const {
  return true;
}

void ActionConfig_Character::InternalSwap(ActionConfig_Character* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  bio_.Swap(&other->bio_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionConfig_Character::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ActionConfig_Object::_Internal {
 public:
};

ActionConfig_Object::ActionConfig_Object(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig.Object)
}
ActionConfig_Object::ActionConfig_Object(const ActionConfig_Object& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_description().empty()) {
    description_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_description(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:service.ActionConfig.Object)
}

void ActionConfig_Object::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActionConfig_Object_service_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

ActionConfig_Object::~ActionConfig_Object() {
  // @@protoc_insertion_point(destructor:service.ActionConfig.Object)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionConfig_Object::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  description_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActionConfig_Object::ArenaDtor(void* object) {
  ActionConfig_Object* _this = reinterpret_cast< ActionConfig_Object* >(object);
  (void)_this;
}
void ActionConfig_Object::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionConfig_Object::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionConfig_Object& ActionConfig_Object::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionConfig_Object_service_2eproto.base);
  return *internal_default_instance();
}


void ActionConfig_Object::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig.Object)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  description_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionConfig_Object::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.ActionConfig.Object.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string description = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_description();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.ActionConfig.Object.description"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionConfig_Object::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig.Object)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.Object.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // string description = 2;
  if (this->description().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.Object.description");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_description(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig.Object)
  return target;
}

size_t ActionConfig_Object::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig.Object)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string description = 2;
  if (this->description().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionConfig_Object::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.ActionConfig.Object)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionConfig_Object* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionConfig_Object>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.ActionConfig.Object)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.ActionConfig.Object)
    MergeFrom(*source);
  }
}

void ActionConfig_Object::MergeFrom(const ActionConfig_Object& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig.Object)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
  if (from.description().size() > 0) {
    _internal_set_description(from._internal_description());
  }
}

void ActionConfig_Object::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.ActionConfig.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionConfig_Object::CopyFrom(const ActionConfig_Object& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig.Object)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionConfig_Object::IsInitialized() const {
  return true;
}

void ActionConfig_Object::InternalSwap(ActionConfig_Object* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  description_.Swap(&other->description_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionConfig_Object::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class ActionConfig::_Internal {
 public:
};

ActionConfig::ActionConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena),
  actions_(arena),
  characters_(arena),
  objects_(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.ActionConfig)
}
ActionConfig::ActionConfig(const ActionConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      actions_(from.actions_),
      characters_(from.characters_),
      objects_(from.objects_) {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  classification_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_classification().empty()) {
    classification_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_classification(), 
      GetArena());
  }
  context_level_ = from.context_level_;
  // @@protoc_insertion_point(copy_constructor:service.ActionConfig)
}

void ActionConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ActionConfig_service_2eproto.base);
  classification_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  context_level_ = 0;
}

ActionConfig::~ActionConfig() {
  // @@protoc_insertion_point(destructor:service.ActionConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void ActionConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  classification_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ActionConfig::ArenaDtor(void* object) {
  ActionConfig* _this = reinterpret_cast< ActionConfig* >(object);
  (void)_this;
}
void ActionConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void ActionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ActionConfig& ActionConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ActionConfig_service_2eproto.base);
  return *internal_default_instance();
}


void ActionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.ActionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  actions_.Clear();
  characters_.Clear();
  objects_.Clear();
  classification_.ClearToEmpty();
  context_level_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ActionConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string actions = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_actions();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.ActionConfig.actions"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .service.ActionConfig.Character characters = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_characters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // repeated .service.ActionConfig.Object objects = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_objects(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      // string classification = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_classification();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.ActionConfig.classification"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 context_level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          context_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ActionConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.ActionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string actions = 1;
  for (int i = 0, n = this->_internal_actions_size(); i < n; i++) {
    const auto& s = this->_internal_actions(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.actions");
    target = stream->WriteString(1, s, target);
  }

  // repeated .service.ActionConfig.Character characters = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_characters_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_characters(i), target, stream);
  }

  // repeated .service.ActionConfig.Object objects = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_objects_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, this->_internal_objects(i), target, stream);
  }

  // string classification = 4;
  if (this->classification().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_classification().data(), static_cast<int>(this->_internal_classification().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.ActionConfig.classification");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_classification(), target);
  }

  // int32 context_level = 5;
  if (this->context_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_context_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.ActionConfig)
  return target;
}

size_t ActionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.ActionConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string actions = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(actions_.size());
  for (int i = 0, n = actions_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      actions_.Get(i));
  }

  // repeated .service.ActionConfig.Character characters = 2;
  total_size += 1UL * this->_internal_characters_size();
  for (const auto& msg : this->characters_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .service.ActionConfig.Object objects = 3;
  total_size += 1UL * this->_internal_objects_size();
  for (const auto& msg : this->objects_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string classification = 4;
  if (this->classification().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_classification());
  }

  // int32 context_level = 5;
  if (this->context_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_context_level());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ActionConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.ActionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ActionConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ActionConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.ActionConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.ActionConfig)
    MergeFrom(*source);
  }
}

void ActionConfig::MergeFrom(const ActionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.ActionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  actions_.MergeFrom(from.actions_);
  characters_.MergeFrom(from.characters_);
  objects_.MergeFrom(from.objects_);
  if (from.classification().size() > 0) {
    _internal_set_classification(from._internal_classification());
  }
  if (from.context_level() != 0) {
    _internal_set_context_level(from._internal_context_level());
  }
}

void ActionConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.ActionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ActionConfig::CopyFrom(const ActionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.ActionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ActionConfig::IsInitialized() const {
  return true;
}

void ActionConfig::InternalSwap(ActionConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  actions_.InternalSwap(&other->actions_);
  characters_.InternalSwap(&other->characters_);
  objects_.InternalSwap(&other->objects_);
  classification_.Swap(&other->classification_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(context_level_, other->context_level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ActionConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class STTRequest::_Internal {
 public:
  static const ::service::AudioConfig& audio_config(const STTRequest* msg);
};

const ::service::AudioConfig&
STTRequest::_Internal::audio_config(const STTRequest* msg) {
  return *msg->request_type_.audio_config_;
}
void STTRequest::set_allocated_audio_config(::service::AudioConfig* audio_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request_type();
  if (audio_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(audio_config);
    if (message_arena != submessage_arena) {
      audio_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, audio_config, submessage_arena);
    }
    set_has_audio_config();
    request_type_.audio_config_ = audio_config;
  }
  // @@protoc_insertion_point(field_set_allocated:service.STTRequest.audio_config)
}
STTRequest::STTRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.STTRequest)
}
STTRequest::STTRequest(const STTRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_request_type();
  switch (from.request_type_case()) {
    case kAudioConfig: {
      _internal_mutable_audio_config()->::service::AudioConfig::MergeFrom(from._internal_audio_config());
      break;
    }
    case kAudioChunk: {
      _internal_set_audio_chunk(from._internal_audio_chunk());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.STTRequest)
}

void STTRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_STTRequest_service_2eproto.base);
  clear_has_request_type();
}

STTRequest::~STTRequest() {
  // @@protoc_insertion_point(destructor:service.STTRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void STTRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_request_type()) {
    clear_request_type();
  }
}

void STTRequest::ArenaDtor(void* object) {
  STTRequest* _this = reinterpret_cast< STTRequest* >(object);
  (void)_this;
}
void STTRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void STTRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const STTRequest& STTRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_STTRequest_service_2eproto.base);
  return *internal_default_instance();
}


void STTRequest::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:service.STTRequest)
  switch (request_type_case()) {
    case kAudioConfig: {
      if (GetArena() == nullptr) {
        delete request_type_.audio_config_;
      }
      break;
    }
    case kAudioChunk: {
      request_type_.audio_chunk_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


void STTRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.STTRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STTRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service.AudioConfig audio_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bytes audio_chunk = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_audio_chunk();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* STTRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.STTRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service.AudioConfig audio_config = 1;
  if (_internal_has_audio_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::audio_config(this), target, stream);
  }

  // bytes audio_chunk = 2;
  if (_internal_has_audio_chunk()) {
    target = stream->WriteBytesMaybeAliased(
        2, this->_internal_audio_chunk(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.STTRequest)
  return target;
}

size_t STTRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.STTRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_type_case()) {
    // .service.AudioConfig audio_config = 1;
    case kAudioConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_type_.audio_config_);
      break;
    }
    // bytes audio_chunk = 2;
    case kAudioChunk: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_audio_chunk());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STTRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.STTRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const STTRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<STTRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.STTRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.STTRequest)
    MergeFrom(*source);
  }
}

void STTRequest::MergeFrom(const STTRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.STTRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_type_case()) {
    case kAudioConfig: {
      _internal_mutable_audio_config()->::service::AudioConfig::MergeFrom(from._internal_audio_config());
      break;
    }
    case kAudioChunk: {
      _internal_set_audio_chunk(from._internal_audio_chunk());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
}

void STTRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.STTRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STTRequest::CopyFrom(const STTRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.STTRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STTRequest::IsInitialized() const {
  return true;
}

void STTRequest::InternalSwap(STTRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(request_type_, other->request_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata STTRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class STTResponse::_Internal {
 public:
};

STTResponse::STTResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.STTResponse)
}
STTResponse::STTResponse(const STTResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:service.STTResponse)
}

void STTResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_STTResponse_service_2eproto.base);
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

STTResponse::~STTResponse() {
  // @@protoc_insertion_point(destructor:service.STTResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void STTResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void STTResponse::ArenaDtor(void* object) {
  STTResponse* _this = reinterpret_cast< STTResponse* >(object);
  (void)_this;
}
void STTResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void STTResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const STTResponse& STTResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_STTResponse_service_2eproto.base);
  return *internal_default_instance();
}


void STTResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.STTResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* STTResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.STTResponse.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* STTResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.STTResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.STTResponse.text");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.STTResponse)
  return target;
}

size_t STTResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.STTResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void STTResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.STTResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const STTResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<STTResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.STTResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.STTResponse)
    MergeFrom(*source);
  }
}

void STTResponse::MergeFrom(const STTResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.STTResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
}

void STTResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.STTResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void STTResponse::CopyFrom(const STTResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.STTResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool STTResponse::IsInitialized() const {
  return true;
}

void STTResponse::InternalSwap(STTResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata STTResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetResponseRequest_GetResponseConfig::_Internal {
 public:
  static const ::service::AudioConfig& audio_config(const GetResponseRequest_GetResponseConfig* msg);
  static const ::service::ActionConfig& action_config(const GetResponseRequest_GetResponseConfig* msg);
};

const ::service::AudioConfig&
GetResponseRequest_GetResponseConfig::_Internal::audio_config(const GetResponseRequest_GetResponseConfig* msg) {
  return *msg->audio_config_;
}
const ::service::ActionConfig&
GetResponseRequest_GetResponseConfig::_Internal::action_config(const GetResponseRequest_GetResponseConfig* msg) {
  return *msg->action_config_;
}
GetResponseRequest_GetResponseConfig::GetResponseRequest_GetResponseConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest.GetResponseConfig)
}
GetResponseRequest_GetResponseConfig::GetResponseRequest_GetResponseConfig(const GetResponseRequest_GetResponseConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  character_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_character_id().empty()) {
    character_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_character_id(), 
      GetArena());
  }
  api_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_api_key().empty()) {
    api_key_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_api_key(), 
      GetArena());
  }
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_session_id(), 
      GetArena());
  }
  speaker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_speaker().empty()) {
    speaker_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_speaker(), 
      GetArena());
  }
  if (from._internal_has_audio_config()) {
    audio_config_ = new ::service::AudioConfig(*from.audio_config_);
  } else {
    audio_config_ = nullptr;
  }
  if (from._internal_has_action_config()) {
    action_config_ = new ::service::ActionConfig(*from.action_config_);
  } else {
    action_config_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest.GetResponseConfig)
}

void GetResponseRequest_GetResponseConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResponseRequest_GetResponseConfig_service_2eproto.base);
  character_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  api_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  speaker_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&audio_config_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&action_config_) -
      reinterpret_cast<char*>(&audio_config_)) + sizeof(action_config_));
}

GetResponseRequest_GetResponseConfig::~GetResponseRequest_GetResponseConfig() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest.GetResponseConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResponseRequest_GetResponseConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  character_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  api_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  speaker_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete audio_config_;
  if (this != internal_default_instance()) delete action_config_;
}

void GetResponseRequest_GetResponseConfig::ArenaDtor(void* object) {
  GetResponseRequest_GetResponseConfig* _this = reinterpret_cast< GetResponseRequest_GetResponseConfig* >(object);
  (void)_this;
}
void GetResponseRequest_GetResponseConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResponseRequest_GetResponseConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResponseRequest_GetResponseConfig& GetResponseRequest_GetResponseConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResponseRequest_GetResponseConfig_service_2eproto.base);
  return *internal_default_instance();
}


void GetResponseRequest_GetResponseConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest.GetResponseConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  character_id_.ClearToEmpty();
  api_key_.ClearToEmpty();
  session_id_.ClearToEmpty();
  speaker_.ClearToEmpty();
  if (GetArena() == nullptr && audio_config_ != nullptr) {
    delete audio_config_;
  }
  audio_config_ = nullptr;
  if (GetArena() == nullptr && action_config_ != nullptr) {
    delete action_config_;
  }
  action_config_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseRequest_GetResponseConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string character_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_character_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.character_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string api_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_api_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.api_key"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string session_id = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service.AudioConfig audio_config = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service.ActionConfig action_config = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string speaker = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_speaker();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseRequest.GetResponseConfig.speaker"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResponseRequest_GetResponseConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest.GetResponseConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string character_id = 2;
  if (this->character_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_character_id().data(), static_cast<int>(this->_internal_character_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.character_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_character_id(), target);
  }

  // string api_key = 3;
  if (this->api_key().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_api_key().data(), static_cast<int>(this->_internal_api_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.api_key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_api_key(), target);
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.session_id");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_session_id(), target);
  }

  // .service.AudioConfig audio_config = 5;
  if (this->has_audio_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::audio_config(this), target, stream);
  }

  // .service.ActionConfig action_config = 6;
  if (this->has_action_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::action_config(this), target, stream);
  }

  // string speaker = 7;
  if (this->speaker().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_speaker().data(), static_cast<int>(this->_internal_speaker().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseConfig.speaker");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_speaker(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest.GetResponseConfig)
  return target;
}

size_t GetResponseRequest_GetResponseConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest.GetResponseConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string character_id = 2;
  if (this->character_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_character_id());
  }

  // string api_key = 3;
  if (this->api_key().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_api_key());
  }

  // string session_id = 4;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  // string speaker = 7;
  if (this->speaker().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_speaker());
  }

  // .service.AudioConfig audio_config = 5;
  if (this->has_audio_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *audio_config_);
  }

  // .service.ActionConfig action_config = 6;
  if (this->has_action_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *action_config_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponseRequest_GetResponseConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.GetResponseRequest.GetResponseConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponseRequest_GetResponseConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResponseRequest_GetResponseConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.GetResponseRequest.GetResponseConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.GetResponseRequest.GetResponseConfig)
    MergeFrom(*source);
  }
}

void GetResponseRequest_GetResponseConfig::MergeFrom(const GetResponseRequest_GetResponseConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest.GetResponseConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.character_id().size() > 0) {
    _internal_set_character_id(from._internal_character_id());
  }
  if (from.api_key().size() > 0) {
    _internal_set_api_key(from._internal_api_key());
  }
  if (from.session_id().size() > 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  if (from.speaker().size() > 0) {
    _internal_set_speaker(from._internal_speaker());
  }
  if (from.has_audio_config()) {
    _internal_mutable_audio_config()->::service::AudioConfig::MergeFrom(from._internal_audio_config());
  }
  if (from.has_action_config()) {
    _internal_mutable_action_config()->::service::ActionConfig::MergeFrom(from._internal_action_config());
  }
}

void GetResponseRequest_GetResponseConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.GetResponseRequest.GetResponseConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponseRequest_GetResponseConfig::CopyFrom(const GetResponseRequest_GetResponseConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest.GetResponseConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseRequest_GetResponseConfig::IsInitialized() const {
  return true;
}

void GetResponseRequest_GetResponseConfig::InternalSwap(GetResponseRequest_GetResponseConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  character_id_.Swap(&other->character_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  api_key_.Swap(&other->api_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  speaker_.Swap(&other->speaker_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, action_config_)
      + sizeof(GetResponseRequest_GetResponseConfig::action_config_)
      - PROTOBUF_FIELD_OFFSET(GetResponseRequest_GetResponseConfig, audio_config_)>(
          reinterpret_cast<char*>(&audio_config_),
          reinterpret_cast<char*>(&other->audio_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseRequest_GetResponseConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetResponseRequest_GetResponseData::_Internal {
 public:
};

GetResponseRequest_GetResponseData::GetResponseRequest_GetResponseData(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest.GetResponseData)
}
GetResponseRequest_GetResponseData::GetResponseRequest_GetResponseData(const GetResponseRequest_GetResponseData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_input_type();
  switch (from.input_type_case()) {
    case kAudioData: {
      _internal_set_audio_data(from._internal_audio_data());
      break;
    }
    case kTextData: {
      _internal_set_text_data(from._internal_text_data());
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest.GetResponseData)
}

void GetResponseRequest_GetResponseData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResponseRequest_GetResponseData_service_2eproto.base);
  clear_has_input_type();
}

GetResponseRequest_GetResponseData::~GetResponseRequest_GetResponseData() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest.GetResponseData)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResponseRequest_GetResponseData::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_input_type()) {
    clear_input_type();
  }
}

void GetResponseRequest_GetResponseData::ArenaDtor(void* object) {
  GetResponseRequest_GetResponseData* _this = reinterpret_cast< GetResponseRequest_GetResponseData* >(object);
  (void)_this;
}
void GetResponseRequest_GetResponseData::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResponseRequest_GetResponseData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResponseRequest_GetResponseData& GetResponseRequest_GetResponseData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResponseRequest_GetResponseData_service_2eproto.base);
  return *internal_default_instance();
}


void GetResponseRequest_GetResponseData::clear_input_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseRequest.GetResponseData)
  switch (input_type_case()) {
    case kAudioData: {
      input_type_.audio_data_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kTextData: {
      input_type_.text_data_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = INPUT_TYPE_NOT_SET;
}


void GetResponseRequest_GetResponseData::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest.GetResponseData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_input_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseRequest_GetResponseData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes audio_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_audio_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_text_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseRequest.GetResponseData.text_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResponseRequest_GetResponseData::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest.GetResponseData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (_internal_has_audio_data()) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_audio_data(), target);
  }

  // string text_data = 2;
  if (_internal_has_text_data()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text_data().data(), static_cast<int>(this->_internal_text_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseRequest.GetResponseData.text_data");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_text_data(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest.GetResponseData)
  return target;
}

size_t GetResponseRequest_GetResponseData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest.GetResponseData)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (input_type_case()) {
    // bytes audio_data = 1;
    case kAudioData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
          this->_internal_audio_data());
      break;
    }
    // string text_data = 2;
    case kTextData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_text_data());
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponseRequest_GetResponseData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.GetResponseRequest.GetResponseData)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponseRequest_GetResponseData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResponseRequest_GetResponseData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.GetResponseRequest.GetResponseData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.GetResponseRequest.GetResponseData)
    MergeFrom(*source);
  }
}

void GetResponseRequest_GetResponseData::MergeFrom(const GetResponseRequest_GetResponseData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest.GetResponseData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.input_type_case()) {
    case kAudioData: {
      _internal_set_audio_data(from._internal_audio_data());
      break;
    }
    case kTextData: {
      _internal_set_text_data(from._internal_text_data());
      break;
    }
    case INPUT_TYPE_NOT_SET: {
      break;
    }
  }
}

void GetResponseRequest_GetResponseData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.GetResponseRequest.GetResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponseRequest_GetResponseData::CopyFrom(const GetResponseRequest_GetResponseData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest.GetResponseData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseRequest_GetResponseData::IsInitialized() const {
  return true;
}

void GetResponseRequest_GetResponseData::InternalSwap(GetResponseRequest_GetResponseData* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(input_type_, other->input_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseRequest_GetResponseData::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetResponseRequest::_Internal {
 public:
  static const ::service::GetResponseRequest_GetResponseConfig& get_response_config(const GetResponseRequest* msg);
  static const ::service::GetResponseRequest_GetResponseData& get_response_data(const GetResponseRequest* msg);
};

const ::service::GetResponseRequest_GetResponseConfig&
GetResponseRequest::_Internal::get_response_config(const GetResponseRequest* msg) {
  return *msg->request_type_.get_response_config_;
}
const ::service::GetResponseRequest_GetResponseData&
GetResponseRequest::_Internal::get_response_data(const GetResponseRequest* msg) {
  return *msg->request_type_.get_response_data_;
}
void GetResponseRequest::set_allocated_get_response_config(::service::GetResponseRequest_GetResponseConfig* get_response_config) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request_type();
  if (get_response_config) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_response_config);
    if (message_arena != submessage_arena) {
      get_response_config = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_response_config, submessage_arena);
    }
    set_has_get_response_config();
    request_type_.get_response_config_ = get_response_config;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseRequest.get_response_config)
}
void GetResponseRequest::set_allocated_get_response_data(::service::GetResponseRequest_GetResponseData* get_response_data) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_request_type();
  if (get_response_data) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(get_response_data);
    if (message_arena != submessage_arena) {
      get_response_data = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, get_response_data, submessage_arena);
    }
    set_has_get_response_data();
    request_type_.get_response_data_ = get_response_data;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseRequest.get_response_data)
}
GetResponseRequest::GetResponseRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseRequest)
}
GetResponseRequest::GetResponseRequest(const GetResponseRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_request_type();
  switch (from.request_type_case()) {
    case kGetResponseConfig: {
      _internal_mutable_get_response_config()->::service::GetResponseRequest_GetResponseConfig::MergeFrom(from._internal_get_response_config());
      break;
    }
    case kGetResponseData: {
      _internal_mutable_get_response_data()->::service::GetResponseRequest_GetResponseData::MergeFrom(from._internal_get_response_data());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseRequest)
}

void GetResponseRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResponseRequest_service_2eproto.base);
  clear_has_request_type();
}

GetResponseRequest::~GetResponseRequest() {
  // @@protoc_insertion_point(destructor:service.GetResponseRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResponseRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (has_request_type()) {
    clear_request_type();
  }
}

void GetResponseRequest::ArenaDtor(void* object) {
  GetResponseRequest* _this = reinterpret_cast< GetResponseRequest* >(object);
  (void)_this;
}
void GetResponseRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResponseRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResponseRequest& GetResponseRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResponseRequest_service_2eproto.base);
  return *internal_default_instance();
}


void GetResponseRequest::clear_request_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseRequest)
  switch (request_type_case()) {
    case kGetResponseConfig: {
      if (GetArena() == nullptr) {
        delete request_type_.get_response_config_;
      }
      break;
    }
    case kGetResponseData: {
      if (GetArena() == nullptr) {
        delete request_type_.get_response_data_;
      }
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = REQUEST_TYPE_NOT_SET;
}


void GetResponseRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_request_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .service.GetResponseRequest.GetResponseConfig get_response_config = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_response_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service.GetResponseRequest.GetResponseData get_response_data = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_get_response_data(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResponseRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .service.GetResponseRequest.GetResponseConfig get_response_config = 1;
  if (_internal_has_get_response_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::get_response_config(this), target, stream);
  }

  // .service.GetResponseRequest.GetResponseData get_response_data = 2;
  if (_internal_has_get_response_data()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::get_response_data(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseRequest)
  return target;
}

size_t GetResponseRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (request_type_case()) {
    // .service.GetResponseRequest.GetResponseConfig get_response_config = 1;
    case kGetResponseConfig: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_type_.get_response_config_);
      break;
    }
    // .service.GetResponseRequest.GetResponseData get_response_data = 2;
    case kGetResponseData: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *request_type_.get_response_data_);
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponseRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.GetResponseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponseRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResponseRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.GetResponseRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.GetResponseRequest)
    MergeFrom(*source);
  }
}

void GetResponseRequest::MergeFrom(const GetResponseRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.request_type_case()) {
    case kGetResponseConfig: {
      _internal_mutable_get_response_config()->::service::GetResponseRequest_GetResponseConfig::MergeFrom(from._internal_get_response_config());
      break;
    }
    case kGetResponseData: {
      _internal_mutable_get_response_data()->::service::GetResponseRequest_GetResponseData::MergeFrom(from._internal_get_response_data());
      break;
    }
    case REQUEST_TYPE_NOT_SET: {
      break;
    }
  }
}

void GetResponseRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.GetResponseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponseRequest::CopyFrom(const GetResponseRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseRequest::IsInitialized() const {
  return true;
}

void GetResponseRequest::InternalSwap(GetResponseRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(request_type_, other->request_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetResponseResponse_AudioResponse::_Internal {
 public:
  static const ::service::AudioConfig& audio_config(const GetResponseResponse_AudioResponse* msg);
};

const ::service::AudioConfig&
GetResponseResponse_AudioResponse::_Internal::audio_config(const GetResponseResponse_AudioResponse* msg) {
  return *msg->audio_config_;
}
GetResponseResponse_AudioResponse::GetResponseResponse_AudioResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.AudioResponse)
}
GetResponseResponse_AudioResponse::GetResponseResponse_AudioResponse(const GetResponseResponse_AudioResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  audio_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_audio_data().empty()) {
    audio_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_audio_data(), 
      GetArena());
  }
  text_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text_data().empty()) {
    text_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text_data(), 
      GetArena());
  }
  if (from._internal_has_audio_config()) {
    audio_config_ = new ::service::AudioConfig(*from.audio_config_);
  } else {
    audio_config_ = nullptr;
  }
  end_of_response_ = from.end_of_response_;
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.AudioResponse)
}

void GetResponseResponse_AudioResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResponseResponse_AudioResponse_service_2eproto.base);
  audio_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&audio_config_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&end_of_response_) -
      reinterpret_cast<char*>(&audio_config_)) + sizeof(end_of_response_));
}

GetResponseResponse_AudioResponse::~GetResponseResponse_AudioResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.AudioResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResponseResponse_AudioResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  audio_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete audio_config_;
}

void GetResponseResponse_AudioResponse::ArenaDtor(void* object) {
  GetResponseResponse_AudioResponse* _this = reinterpret_cast< GetResponseResponse_AudioResponse* >(object);
  (void)_this;
}
void GetResponseResponse_AudioResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResponseResponse_AudioResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResponseResponse_AudioResponse& GetResponseResponse_AudioResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResponseResponse_AudioResponse_service_2eproto.base);
  return *internal_default_instance();
}


void GetResponseResponse_AudioResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.AudioResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  audio_data_.ClearToEmpty();
  text_data_.ClearToEmpty();
  if (GetArena() == nullptr && audio_config_ != nullptr) {
    delete audio_config_;
  }
  audio_config_ = nullptr;
  end_of_response_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse_AudioResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bytes audio_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_audio_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service.AudioConfig audio_config = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_config(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text_data = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_text_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseResponse.AudioResponse.text_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool end_of_response = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          end_of_response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResponseResponse_AudioResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.AudioResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (this->audio_data().size() > 0) {
    target = stream->WriteBytesMaybeAliased(
        1, this->_internal_audio_data(), target);
  }

  // .service.AudioConfig audio_config = 2;
  if (this->has_audio_config()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::audio_config(this), target, stream);
  }

  // string text_data = 3;
  if (this->text_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text_data().data(), static_cast<int>(this->_internal_text_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.AudioResponse.text_data");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_text_data(), target);
  }

  // bool end_of_response = 4;
  if (this->end_of_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(4, this->_internal_end_of_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.AudioResponse)
  return target;
}

size_t GetResponseResponse_AudioResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.AudioResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bytes audio_data = 1;
  if (this->audio_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_audio_data());
  }

  // string text_data = 3;
  if (this->text_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text_data());
  }

  // .service.AudioConfig audio_config = 2;
  if (this->has_audio_config()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *audio_config_);
  }

  // bool end_of_response = 4;
  if (this->end_of_response() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponseResponse_AudioResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.GetResponseResponse.AudioResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponseResponse_AudioResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResponseResponse_AudioResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.GetResponseResponse.AudioResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.GetResponseResponse.AudioResponse)
    MergeFrom(*source);
  }
}

void GetResponseResponse_AudioResponse::MergeFrom(const GetResponseResponse_AudioResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.AudioResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.audio_data().size() > 0) {
    _internal_set_audio_data(from._internal_audio_data());
  }
  if (from.text_data().size() > 0) {
    _internal_set_text_data(from._internal_text_data());
  }
  if (from.has_audio_config()) {
    _internal_mutable_audio_config()->::service::AudioConfig::MergeFrom(from._internal_audio_config());
  }
  if (from.end_of_response() != 0) {
    _internal_set_end_of_response(from._internal_end_of_response());
  }
}

void GetResponseResponse_AudioResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.GetResponseResponse.AudioResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponseResponse_AudioResponse::CopyFrom(const GetResponseResponse_AudioResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.AudioResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse_AudioResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse_AudioResponse::InternalSwap(GetResponseResponse_AudioResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  audio_data_.Swap(&other->audio_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_data_.Swap(&other->text_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, end_of_response_)
      + sizeof(GetResponseResponse_AudioResponse::end_of_response_)
      - PROTOBUF_FIELD_OFFSET(GetResponseResponse_AudioResponse, audio_config_)>(
          reinterpret_cast<char*>(&audio_config_),
          reinterpret_cast<char*>(&other->audio_config_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse_AudioResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetResponseResponse_ActionResponse::_Internal {
 public:
};

GetResponseResponse_ActionResponse::GetResponseResponse_ActionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.ActionResponse)
}
GetResponseResponse_ActionResponse::GetResponseResponse_ActionResponse(const GetResponseResponse_ActionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_action().empty()) {
    action_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_action(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.ActionResponse)
}

void GetResponseResponse_ActionResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResponseResponse_ActionResponse_service_2eproto.base);
  action_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

GetResponseResponse_ActionResponse::~GetResponseResponse_ActionResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.ActionResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResponseResponse_ActionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  action_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetResponseResponse_ActionResponse::ArenaDtor(void* object) {
  GetResponseResponse_ActionResponse* _this = reinterpret_cast< GetResponseResponse_ActionResponse* >(object);
  (void)_this;
}
void GetResponseResponse_ActionResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResponseResponse_ActionResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResponseResponse_ActionResponse& GetResponseResponse_ActionResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResponseResponse_ActionResponse_service_2eproto.base);
  return *internal_default_instance();
}


void GetResponseResponse_ActionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.ActionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  action_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse_ActionResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string action = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_action();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseResponse.ActionResponse.action"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResponseResponse_ActionResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.ActionResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_action().data(), static_cast<int>(this->_internal_action().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.ActionResponse.action");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_action(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.ActionResponse)
  return target;
}

size_t GetResponseResponse_ActionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.ActionResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string action = 1;
  if (this->action().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_action());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponseResponse_ActionResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.GetResponseResponse.ActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponseResponse_ActionResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResponseResponse_ActionResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.GetResponseResponse.ActionResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.GetResponseResponse.ActionResponse)
    MergeFrom(*source);
  }
}

void GetResponseResponse_ActionResponse::MergeFrom(const GetResponseResponse_ActionResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.ActionResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.action().size() > 0) {
    _internal_set_action(from._internal_action());
  }
}

void GetResponseResponse_ActionResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.GetResponseResponse.ActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponseResponse_ActionResponse::CopyFrom(const GetResponseResponse_ActionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.ActionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse_ActionResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse_ActionResponse::InternalSwap(GetResponseResponse_ActionResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  action_.Swap(&other->action_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse_ActionResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetResponseResponse_UserTranscript::_Internal {
 public:
};

GetResponseResponse_UserTranscript::GetResponseResponse_UserTranscript(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse.UserTranscript)
}
GetResponseResponse_UserTranscript::GetResponseResponse_UserTranscript(const GetResponseResponse_UserTranscript& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  text_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text_data().empty()) {
    text_data_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_text_data(), 
      GetArena());
  }
  ::memcpy(&is_final_, &from.is_final_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_of_response_) -
    reinterpret_cast<char*>(&is_final_)) + sizeof(end_of_response_));
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse.UserTranscript)
}

void GetResponseResponse_UserTranscript::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResponseResponse_UserTranscript_service_2eproto.base);
  text_data_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(reinterpret_cast<char*>(this) + static_cast<size_t>(
      reinterpret_cast<char*>(&is_final_) - reinterpret_cast<char*>(this)),
      0, static_cast<size_t>(reinterpret_cast<char*>(&end_of_response_) -
      reinterpret_cast<char*>(&is_final_)) + sizeof(end_of_response_));
}

GetResponseResponse_UserTranscript::~GetResponseResponse_UserTranscript() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse.UserTranscript)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResponseResponse_UserTranscript::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  text_data_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void GetResponseResponse_UserTranscript::ArenaDtor(void* object) {
  GetResponseResponse_UserTranscript* _this = reinterpret_cast< GetResponseResponse_UserTranscript* >(object);
  (void)_this;
}
void GetResponseResponse_UserTranscript::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResponseResponse_UserTranscript::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResponseResponse_UserTranscript& GetResponseResponse_UserTranscript::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResponseResponse_UserTranscript_service_2eproto.base);
  return *internal_default_instance();
}


void GetResponseResponse_UserTranscript::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse.UserTranscript)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  text_data_.ClearToEmpty();
  ::memset(&is_final_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_of_response_) -
      reinterpret_cast<char*>(&is_final_)) + sizeof(end_of_response_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse_UserTranscript::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string text_data = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_text_data();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseResponse.UserTranscript.text_data"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool is_final = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          is_final_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool end_of_response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          end_of_response_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResponseResponse_UserTranscript::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse.UserTranscript)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text_data = 1;
  if (this->text_data().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text_data().data(), static_cast<int>(this->_internal_text_data().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.UserTranscript.text_data");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_text_data(), target);
  }

  // bool is_final = 2;
  if (this->is_final() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(2, this->_internal_is_final(), target);
  }

  // bool end_of_response = 3;
  if (this->end_of_response() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_end_of_response(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse.UserTranscript)
  return target;
}

size_t GetResponseResponse_UserTranscript::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse.UserTranscript)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string text_data = 1;
  if (this->text_data().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text_data());
  }

  // bool is_final = 2;
  if (this->is_final() != 0) {
    total_size += 1 + 1;
  }

  // bool end_of_response = 3;
  if (this->end_of_response() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponseResponse_UserTranscript::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.GetResponseResponse.UserTranscript)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponseResponse_UserTranscript* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResponseResponse_UserTranscript>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.GetResponseResponse.UserTranscript)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.GetResponseResponse.UserTranscript)
    MergeFrom(*source);
  }
}

void GetResponseResponse_UserTranscript::MergeFrom(const GetResponseResponse_UserTranscript& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse.UserTranscript)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text_data().size() > 0) {
    _internal_set_text_data(from._internal_text_data());
  }
  if (from.is_final() != 0) {
    _internal_set_is_final(from._internal_is_final());
  }
  if (from.end_of_response() != 0) {
    _internal_set_end_of_response(from._internal_end_of_response());
  }
}

void GetResponseResponse_UserTranscript::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.GetResponseResponse.UserTranscript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponseResponse_UserTranscript::CopyFrom(const GetResponseResponse_UserTranscript& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse.UserTranscript)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse_UserTranscript::IsInitialized() const {
  return true;
}

void GetResponseResponse_UserTranscript::InternalSwap(GetResponseResponse_UserTranscript* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  text_data_.Swap(&other->text_data_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, end_of_response_)
      + sizeof(GetResponseResponse_UserTranscript::end_of_response_)
      - PROTOBUF_FIELD_OFFSET(GetResponseResponse_UserTranscript, is_final_)>(
          reinterpret_cast<char*>(&is_final_),
          reinterpret_cast<char*>(&other->is_final_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse_UserTranscript::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class GetResponseResponse::_Internal {
 public:
  static const ::service::GetResponseResponse_ActionResponse& action_response(const GetResponseResponse* msg);
  static const ::service::GetResponseResponse_AudioResponse& audio_response(const GetResponseResponse* msg);
  static const ::service::GetResponseResponse_UserTranscript& user_query(const GetResponseResponse* msg);
};

const ::service::GetResponseResponse_ActionResponse&
GetResponseResponse::_Internal::action_response(const GetResponseResponse* msg) {
  return *msg->response_type_.action_response_;
}
const ::service::GetResponseResponse_AudioResponse&
GetResponseResponse::_Internal::audio_response(const GetResponseResponse* msg) {
  return *msg->response_type_.audio_response_;
}
const ::service::GetResponseResponse_UserTranscript&
GetResponseResponse::_Internal::user_query(const GetResponseResponse* msg) {
  return *msg->response_type_.user_query_;
}
void GetResponseResponse::set_allocated_action_response(::service::GetResponseResponse_ActionResponse* action_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response_type();
  if (action_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(action_response);
    if (message_arena != submessage_arena) {
      action_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, action_response, submessage_arena);
    }
    set_has_action_response();
    response_type_.action_response_ = action_response;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.action_response)
}
void GetResponseResponse::set_allocated_audio_response(::service::GetResponseResponse_AudioResponse* audio_response) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response_type();
  if (audio_response) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(audio_response);
    if (message_arena != submessage_arena) {
      audio_response = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, audio_response, submessage_arena);
    }
    set_has_audio_response();
    response_type_.audio_response_ = audio_response;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.audio_response)
}
void GetResponseResponse::set_allocated_user_query(::service::GetResponseResponse_UserTranscript* user_query) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_response_type();
  if (user_query) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(user_query);
    if (message_arena != submessage_arena) {
      user_query = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, user_query, submessage_arena);
    }
    set_has_user_query();
    response_type_.user_query_ = user_query;
  }
  // @@protoc_insertion_point(field_set_allocated:service.GetResponseResponse.user_query)
}
GetResponseResponse::GetResponseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.GetResponseResponse)
}
GetResponseResponse::GetResponseResponse(const GetResponseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_session_id().empty()) {
    session_id_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_session_id(), 
      GetArena());
  }
  clear_has_response_type();
  switch (from.response_type_case()) {
    case kActionResponse: {
      _internal_mutable_action_response()->::service::GetResponseResponse_ActionResponse::MergeFrom(from._internal_action_response());
      break;
    }
    case kAudioResponse: {
      _internal_mutable_audio_response()->::service::GetResponseResponse_AudioResponse::MergeFrom(from._internal_audio_response());
      break;
    }
    case kDebugLog: {
      _internal_set_debug_log(from._internal_debug_log());
      break;
    }
    case kUserQuery: {
      _internal_mutable_user_query()->::service::GetResponseResponse_UserTranscript::MergeFrom(from._internal_user_query());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:service.GetResponseResponse)
}

void GetResponseResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_GetResponseResponse_service_2eproto.base);
  session_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_response_type();
}

GetResponseResponse::~GetResponseResponse() {
  // @@protoc_insertion_point(destructor:service.GetResponseResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void GetResponseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  session_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_response_type()) {
    clear_response_type();
  }
}

void GetResponseResponse::ArenaDtor(void* object) {
  GetResponseResponse* _this = reinterpret_cast< GetResponseResponse* >(object);
  (void)_this;
}
void GetResponseResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void GetResponseResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const GetResponseResponse& GetResponseResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_GetResponseResponse_service_2eproto.base);
  return *internal_default_instance();
}


void GetResponseResponse::clear_response_type() {
// @@protoc_insertion_point(one_of_clear_start:service.GetResponseResponse)
  switch (response_type_case()) {
    case kActionResponse: {
      if (GetArena() == nullptr) {
        delete response_type_.action_response_;
      }
      break;
    }
    case kAudioResponse: {
      if (GetArena() == nullptr) {
        delete response_type_.audio_response_;
      }
      break;
    }
    case kDebugLog: {
      response_type_.debug_log_.Destroy(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, GetArena());
      break;
    }
    case kUserQuery: {
      if (GetArena() == nullptr) {
        delete response_type_.user_query_;
      }
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = RESPONSE_TYPE_NOT_SET;
}


void GetResponseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.GetResponseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  session_id_.ClearToEmpty();
  clear_response_type();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetResponseResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string session_id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_session_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseResponse.session_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service.GetResponseResponse.ActionResponse action_response = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_action_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service.GetResponseResponse.AudioResponse audio_response = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_audio_response(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string debug_log = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_debug_log();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.GetResponseResponse.debug_log"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .service.GetResponseResponse.UserTranscript user_query = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_user_query(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* GetResponseResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.GetResponseResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_session_id().data(), static_cast<int>(this->_internal_session_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.session_id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_session_id(), target);
  }

  // .service.GetResponseResponse.ActionResponse action_response = 2;
  if (_internal_has_action_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::action_response(this), target, stream);
  }

  // .service.GetResponseResponse.AudioResponse audio_response = 3;
  if (_internal_has_audio_response()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::audio_response(this), target, stream);
  }

  // string debug_log = 4;
  if (_internal_has_debug_log()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_debug_log().data(), static_cast<int>(this->_internal_debug_log().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.GetResponseResponse.debug_log");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_debug_log(), target);
  }

  // .service.GetResponseResponse.UserTranscript user_query = 5;
  if (_internal_has_user_query()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::user_query(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.GetResponseResponse)
  return target;
}

size_t GetResponseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.GetResponseResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string session_id = 1;
  if (this->session_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_session_id());
  }

  switch (response_type_case()) {
    // .service.GetResponseResponse.ActionResponse action_response = 2;
    case kActionResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_type_.action_response_);
      break;
    }
    // .service.GetResponseResponse.AudioResponse audio_response = 3;
    case kAudioResponse: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_type_.audio_response_);
      break;
    }
    // string debug_log = 4;
    case kDebugLog: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_debug_log());
      break;
    }
    // .service.GetResponseResponse.UserTranscript user_query = 5;
    case kUserQuery: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *response_type_.user_query_);
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GetResponseResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.GetResponseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const GetResponseResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<GetResponseResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.GetResponseResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.GetResponseResponse)
    MergeFrom(*source);
  }
}

void GetResponseResponse::MergeFrom(const GetResponseResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.GetResponseResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.session_id().size() > 0) {
    _internal_set_session_id(from._internal_session_id());
  }
  switch (from.response_type_case()) {
    case kActionResponse: {
      _internal_mutable_action_response()->::service::GetResponseResponse_ActionResponse::MergeFrom(from._internal_action_response());
      break;
    }
    case kAudioResponse: {
      _internal_mutable_audio_response()->::service::GetResponseResponse_AudioResponse::MergeFrom(from._internal_audio_response());
      break;
    }
    case kDebugLog: {
      _internal_set_debug_log(from._internal_debug_log());
      break;
    }
    case kUserQuery: {
      _internal_mutable_user_query()->::service::GetResponseResponse_UserTranscript::MergeFrom(from._internal_user_query());
      break;
    }
    case RESPONSE_TYPE_NOT_SET: {
      break;
    }
  }
}

void GetResponseResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.GetResponseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GetResponseResponse::CopyFrom(const GetResponseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.GetResponseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetResponseResponse::IsInitialized() const {
  return true;
}

void GetResponseResponse::InternalSwap(GetResponseResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  session_id_.Swap(&other->session_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(response_type_, other->response_type_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetResponseResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HelloRequest::_Internal {
 public:
};

HelloRequest::HelloRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.HelloRequest)
}
HelloRequest::HelloRequest(const HelloRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_name(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:service.HelloRequest)
}

void HelloRequest::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HelloRequest_service_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HelloRequest::~HelloRequest() {
  // @@protoc_insertion_point(destructor:service.HelloRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HelloRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HelloRequest::ArenaDtor(void* object) {
  HelloRequest* _this = reinterpret_cast< HelloRequest* >(object);
  (void)_this;
}
void HelloRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HelloRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloRequest& HelloRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HelloRequest_service_2eproto.base);
  return *internal_default_instance();
}


void HelloRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:service.HelloRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.HelloRequest.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HelloRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.HelloRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.HelloRequest.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.HelloRequest)
  return target;
}

size_t HelloRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.HelloRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HelloRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.HelloRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.HelloRequest)
    MergeFrom(*source);
  }
}

void HelloRequest::MergeFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.HelloRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {
    _internal_set_name(from._internal_name());
  }
}

void HelloRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloRequest::CopyFrom(const HelloRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.HelloRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloRequest::IsInitialized() const {
  return true;
}

void HelloRequest::InternalSwap(HelloRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class HelloResponse::_Internal {
 public:
};

HelloResponse::HelloResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:service.HelloResponse)
}
HelloResponse::HelloResponse(const HelloResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message().empty()) {
    message_.Set(::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::EmptyDefault{}, from._internal_message(), 
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:service.HelloResponse)
}

void HelloResponse::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_HelloResponse_service_2eproto.base);
  message_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

HelloResponse::~HelloResponse() {
  // @@protoc_insertion_point(destructor:service.HelloResponse)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void HelloResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  message_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void HelloResponse::ArenaDtor(void* object) {
  HelloResponse* _this = reinterpret_cast< HelloResponse* >(object);
  (void)_this;
}
void HelloResponse::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void HelloResponse::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const HelloResponse& HelloResponse::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_HelloResponse_service_2eproto.base);
  return *internal_default_instance();
}


void HelloResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:service.HelloResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* HelloResponse::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "service.HelloResponse.message"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* HelloResponse::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:service.HelloResponse)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "service.HelloResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:service.HelloResponse)
  return target;
}

size_t HelloResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:service.HelloResponse)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void HelloResponse::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:service.HelloResponse)
  GOOGLE_DCHECK_NE(&from, this);
  const HelloResponse* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<HelloResponse>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:service.HelloResponse)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:service.HelloResponse)
    MergeFrom(*source);
  }
}

void HelloResponse::MergeFrom(const HelloResponse& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:service.HelloResponse)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.message().size() > 0) {
    _internal_set_message(from._internal_message());
  }
}

void HelloResponse::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:service.HelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HelloResponse::CopyFrom(const HelloResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:service.HelloResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HelloResponse::IsInitialized() const {
  return true;
}

void HelloResponse::InternalSwap(HelloResponse* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  message_.Swap(&other->message_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata HelloResponse::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace service
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::service::AudioConfig* Arena::CreateMaybeMessage< ::service::AudioConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::AudioConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::service::ActionConfig_Character* Arena::CreateMaybeMessage< ::service::ActionConfig_Character >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::ActionConfig_Character >(arena);
}
template<> PROTOBUF_NOINLINE ::service::ActionConfig_Object* Arena::CreateMaybeMessage< ::service::ActionConfig_Object >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::ActionConfig_Object >(arena);
}
template<> PROTOBUF_NOINLINE ::service::ActionConfig* Arena::CreateMaybeMessage< ::service::ActionConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::ActionConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::service::STTRequest* Arena::CreateMaybeMessage< ::service::STTRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::STTRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::service::STTResponse* Arena::CreateMaybeMessage< ::service::STTResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::STTResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseRequest_GetResponseConfig* Arena::CreateMaybeMessage< ::service::GetResponseRequest_GetResponseConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseRequest_GetResponseConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseRequest_GetResponseData* Arena::CreateMaybeMessage< ::service::GetResponseRequest_GetResponseData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseRequest_GetResponseData >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseRequest* Arena::CreateMaybeMessage< ::service::GetResponseRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse_AudioResponse* Arena::CreateMaybeMessage< ::service::GetResponseResponse_AudioResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse_AudioResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse_ActionResponse* Arena::CreateMaybeMessage< ::service::GetResponseResponse_ActionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse_ActionResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse_UserTranscript* Arena::CreateMaybeMessage< ::service::GetResponseResponse_UserTranscript >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse_UserTranscript >(arena);
}
template<> PROTOBUF_NOINLINE ::service::GetResponseResponse* Arena::CreateMaybeMessage< ::service::GetResponseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::GetResponseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::service::HelloRequest* Arena::CreateMaybeMessage< ::service::HelloRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::HelloRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::service::HelloResponse* Arena::CreateMaybeMessage< ::service::HelloResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::service::HelloResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
